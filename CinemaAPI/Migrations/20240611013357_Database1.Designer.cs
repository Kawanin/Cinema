// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CinemaAPI.Migrations
{
    [DbContext(typeof(BancoDeDados))]
    [Migration("20240611013357_Database1")]
    partial class Database1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Cliente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int?>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Filme", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .HasColumnType("longtext");

                    b.Property<string>("Classificacao")
                        .HasColumnType("longtext");

                    b.Property<string>("Direcao")
                        .HasColumnType("longtext");

                    b.Property<string>("Duracao")
                        .HasColumnType("longtext");

                    b.Property<string>("PaisOrigem")
                        .HasColumnType("longtext");

                    b.Property<string>("Sinopse")
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Filmes");
                });

            modelBuilder.Entity("Ingresso", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<int>("FilmeID")
                        .HasColumnType("int");

                    b.Property<double?>("TotalBomboniere")
                        .HasColumnType("double");

                    b.Property<double>("TotalCompra")
                        .HasColumnType("double");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("FilmeID");

                    b.ToTable("Ingresso");
                });

            modelBuilder.Entity("ProdutoBomboniere", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("IngressoID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<double?>("Valor")
                        .HasColumnType("double");

                    b.HasKey("ID");

                    b.HasIndex("IngressoID");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Sala", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Assento")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Sala");
                });

            modelBuilder.Entity("Ingresso", b =>
                {
                    b.HasOne("Cliente", "Cliente")
                        .WithMany("Ingressos")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Filme", "Filme")
                        .WithMany("Ingressos")
                        .HasForeignKey("FilmeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Filme");
                });

            modelBuilder.Entity("ProdutoBomboniere", b =>
                {
                    b.HasOne("Ingresso", null)
                        .WithMany("CarrinhoBomboniere")
                        .HasForeignKey("IngressoID");
                });

            modelBuilder.Entity("Cliente", b =>
                {
                    b.Navigation("Ingressos");
                });

            modelBuilder.Entity("Filme", b =>
                {
                    b.Navigation("Ingressos");
                });

            modelBuilder.Entity("Ingresso", b =>
                {
                    b.Navigation("CarrinhoBomboniere");
                });
#pragma warning restore 612, 618
        }
    }
}
